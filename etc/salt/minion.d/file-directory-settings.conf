# ==============================================================================
#                         FILE DIRECTORY SETTINGS 
# ==============================================================================
# The Salt Minion can redirect all file server operations to a local directory,
# this allows for the same state tree that is on the master to be used if
# copied completely onto the minion. This is a literal copy of the settings on
# the master but used to reference a local directory on the minion.


# ------------------------------------------------------------------------------
# Set the file client. The client defaults to looking on the master server for
# files, but can be directed to look at the local file directory setting
# defined below by setting it to local.
# ------------------------------------------------------------------------------
file_client: local

# ------------------------------------------------------------------------------
# The file directory works on environments passed to the minion, each environment
# can have multiple root directories, the subdirectories in the multiple file
# roots cannot match, otherwise the downloaded files will not be able to be
# reliably ensured. A base environment is required to house the top file.
# ------------------------------------------------------------------------------
file_roots:
  base:
    - /srv/salt
    - /srv/formulas/mgmt-salt-formula-base
    - /srv/formulas/mgmt-salt-formula-overrides

    # Formulas
    - /srv/formulas/yamlscript-formula
    - /srv/formulas/users-yamlscript-formula

    - /srv/formulas/mgmt-salt-formula-all-gpg
    - /srv/formulas/mgmt-salt-formula-all-policy-qubesbuilder
    - /srv/formulas/mgmt-salt-formula-all-vim

  dom0:
    - /srv/formulas/mgmt-salt-formula-dom0-base
    - /srv/formulas/mgmt-salt-formula-dom0-fix-permissions
    - /srv/formulas/mgmt-salt-formula-dom0-qvm
    - /srv/formulas/mgmt-salt-formula-dom0-template-upgrade
    - /srv/formulas/mgmt-salt-formula-dom0-update
    - /srv/formulas/mgmt-salt-formula-dom0-virtual-machines

  vm:
    - /srv/formulas/mgmt-salt-formula-vm-base
    - /srv/formulas/mgmt-salt-formula-vm-python-pip
    - /srv/formulas/mgmt-salt-formula-all-theme

  vm_other:
    - /srv/formulas/mgmt-salt-formula-all-privacy

  user:
    - /srv/user_salt

# ------------------------------------------------------------------------------
# By default, the Salt fileserver recurses fully into all defined environments
# to attempt to find files. To limit this behavior so that the fileserver only
# traverses directories with SLS files and special Salt directories like _modules,
# enable the option below. This might be useful for installations where a file root
# has a very large number of files and performance is negatively impacted. Default
# is False.
# ------------------------------------------------------------------------------
fileserver_limit_traversal: False

# ------------------------------------------------------------------------------
# The hash_type is the hash to use when discovering the hash of a file in
# the local fileserver. The default is md5, but sha1, sha224, sha256, sha384
# and sha512 are also supported.
#
# Warning: Prior to changing this value, the minion should be stopped and all
# Salt caches should be cleared.
# ------------------------------------------------------------------------------
hash_type: md5

# ------------------------------------------------------------------------------
# The Salt pillar is searched for locally if file_client is set to local. If
# this is the case, and pillar data is defined, then the pillar_roots need to
# also be configured on the minion:
# ------------------------------------------------------------------------------
pillar_roots:
  base:
    - /srv/pillar/base

  dom0:
    - /srv/pillar/dom0

  vm:
    - /srv/pillar/vm

  vm_other:
    - /srv/pillar/vm_other

  user:
    - /srv/user_pillar

# vim: set syntax=yaml ts=2 sw=2 sts=2 et :
