# ==============================================================================
#                        STATE MANAGEMENT SETTINGS
# ==============================================================================


# ------------------------------------------------------------------------------
# The state management system executes all of the state templates on the minion
# to enable more granular control of system state management. The type of
# template and serialization used for state management needs to be configured
# on the minion, the default renderer is yaml_jinja. This is a yaml file
# rendered from a jinja template, the available options are:
# yaml_jinja
# yaml_mako
# yaml_wempy
# json_jinja
# json_mako
# json_wempy
# ------------------------------------------------------------------------------
renderer: yaml_jinja

# ------------------------------------------------------------------------------
# The failhard option tells the minions to stop immediately after the first
# failure detected in the state execution. Defaults to False.
# ------------------------------------------------------------------------------
failhard: False

# ------------------------------------------------------------------------------
# autoload_dynamic_modules turns on automatic loading of modules found in the
# environments on the master. This is turned on by default. To turn of
# autoloading modules when states run, set this value to False.
# ------------------------------------------------------------------------------
autoload_dynamic_modules: True

# ------------------------------------------------------------------------------
# clean_dynamic_modules keeps the dynamic modules on the minion in sync with
# the dynamic modules on the master, this means that if a dynamic module is
# not on the master it will be deleted from the minion. By default, this is
# enabled and can be disabled by changing this value to False.
# ------------------------------------------------------------------------------
clean_dynamic_modules: True

# ------------------------------------------------------------------------------
# If using the local file directory, then the state top file name needs to be
# defined, by default this is top.sls.
# ------------------------------------------------------------------------------
state_top: top.sls

# ------------------------------------------------------------------------------
# Run states when the minion daemon starts. To enable, set startup_states to:
# 'highstate' -- Execute state.highstate
# 'sls' -- Read in the sls_list option and execute the named sls files
# 'top' -- Read top_file option and execute based on that file on the Master
# ------------------------------------------------------------------------------
startup_states: ''

# ------------------------------------------------------------------------------
# List of states to run when the minion starts up if startup_states is 'sls':
# ------------------------------------------------------------------------------
#sls_list:
#  - edit.vim
#  - hyper

# ------------------------------------------------------------------------------
# Top file to execute if startup_states is 'top':
# ------------------------------------------------------------------------------
#top_file: ''

# vim: set syntax=yaml ts=2 sw=2 sts=2 et :
